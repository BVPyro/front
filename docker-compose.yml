---
version: "3"

services:
  # ===========================================================================
  # filebroswer for exported .csv files [https://filebrowser.bvpk.net]
  # ===========================================================================
  filebrowser:
    container_name: filebrowser
    image: filebrowser/filebrowser:v2
    restart: always
    volumes:
      - /srv/bvpk/export:/srv
      - /srv/bvpk/filebrowser/database.db:/database.db
      - /srv/bvpk/filebrowser/config.json:/.filebrowser.json
    environment:
      - FB_PORT=8081
    expose:
      - "8081"
    healthcheck:
      test: curl -f http://localhost:8081/health || exit 1
      interval: 10s
      timeout: 2s
      retries: 10
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.filebrowser.loadbalancer.server.port=8081"
      - "traefik.http.routers.filebrowser.rule=Host(`filebrowser.bvpk.net`)"
      - "traefik.http.routers.filebrowser.entrypoints=https"
      - "traefik.http.routers.filebrowser.tls=true"
      - "traefik.http.routers.filebrowser.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.filebrowser-https.redirectscheme.scheme=https"
      - "traefik.http.routers.filebrowser-http.entrypoints=http"
      - "traefik.http.routers.filebrowser-http.rule=Host(`filebrowser.bvpk.net`)"
      - "traefik.http.routers.filebrowser-http.middlewares=filebrowser-https@docker"
    logging:
      driver: journald
    networks:
      - web

  # ===========================================================================
  # CMS based on Directus [https://cms.bvpk.net]
  # ===========================================================================
  cms-db:
    image: postgres:13
    container_name: cms-db
    networks:
      - cms
    restart: always
    volumes:
      - /srv/bvpk/cms/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "directus"
      POSTGRES_PASSWORD: ${CMS_DB_PASSWORD}
      POSTGRES_DB: "directus"
    expose:
      - "5432"
    healthcheck:
      test: pg_isready -U directus -d directus
      interval: 10s
      timeout: 2s
      retries: 10
    logging:
      driver: journald

  cms-cache:
    restart: always
    container_name: cms-cache
    networks:
      - cms
    image: redis:6
    expose:
      - "6379"

  cms:
    restart: always
    container_name: cms
    image: directus/directus:9.0.0-rc.99
    expose:
      - "8055"
    volumes:
      - /srv/bvpk/cms/uploads:/directus/uploads:rw
    networks:
      - cms
      - web
    depends_on:
      - cms-cache
      - cms-db
    environment:
      KEY: ${CMS_KEY}
      SECRET: ${CMS_SECRET}
      DB_CLIENT: "pg"
      DB_HOST: "cms-db"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: "directus"
      DB_PASSWORD: ${CMS_DB_PASSWORD}
      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      CACHE_REDIS: "redis://cms-cache:6379"
      ADMIN_EMAIL: admin@sehn.dev
      ADMIN_PASSWORD: ${CMS_ADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.cms.loadbalancer.server.port=8055"
      - "traefik.http.routers.cms.rule=Host(`cms.bvpk.net`)"
      - "traefik.http.routers.cms.entrypoints=https"
      - "traefik.http.routers.cms.tls=true"
      - "traefik.http.routers.cms.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.cms-https.redirectscheme.scheme=https"
      - "traefik.http.routers.cms-http.entrypoints=http"
      - "traefik.http.routers.cms-http.rule=Host(`cms.bvpk.net`)"
      - "traefik.http.routers.cms-http.middlewares=cms-https@docker"
    logging:
      driver: journald

  # ===========================================================================
  # NocoDB [https://db.bvpk.net]
  # ===========================================================================
  nocodb-db:
    image: postgres:13
    container_name: nocodb-db
    restart: always
    volumes:
      - /srv/bvpk/nocodb-db:/var/lib/postgresql/data
    networks:
      - nocodb
    environment:
      POSTGRES_USER: "nocodb"
      POSTGRES_PASSWORD: ${NOCODB_DB_PASSWORD}
      POSTGRES_DB: "nocodb"
    healthcheck:
      test: pg_isready -U nocodb -d nocodb
      interval: 10s
      timeout: 2s
      retries: 10
    logging:
      driver: journald

  nocodb:
    container_name: nocodb
    image: nocodb/nocodb:0.11.46
    restart: always
    environment:
      - NC_DB=pg://nocodb-db:5432?u=nocodb&p=${NOCODB_DB_PASSWORD}&d=nocodb
      - NC_PUBLIC_URL=https://db.bvpk.net
      - NC_DISABLE_TELE=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
      - "traefik.http.routers.nocodb.rule=Host(`db.bvpk.net`)"
      - "traefik.http.routers.nocodb.entrypoints=https"
      - "traefik.http.routers.nocodb.tls=true"
      - "traefik.http.routers.nocodb.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.nocodb-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nocodb-http.entrypoints=http"
      - "traefik.http.routers.nocodb-http.rule=Host(`db.bvpk.net`)"
      - "traefik.http.routers.nocodb-http.middlewares=nocodb-https@docker"
    depends_on:
      - nocodb-db
    logging:
      driver: journald
    networks:
      - web
      - nocodb

networks:
  nocodb:
    external: false
    name: nocodb
  cms:
    external: false
    name: cms
  web:
    external: true
    name: web
